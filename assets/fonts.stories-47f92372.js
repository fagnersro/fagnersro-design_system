var i=Object.defineProperty;var n=(e,t)=>i(e,"name",{value:t,configurable:!0});import"./index-95af657b.js";import{c as o,A as c,M as d}from"./Props-292c0c5a.js";import"./jsx-runtime-9949504e.js";import"./iframe-601a27da.js";import{T as l}from"./TokensGrid-4392d664.js";import{b as u}from"./index-e12bbcad.js";import"./string-64759f81.js";import"./index-b9cffdf5.js";import"./es.map.constructor-7439fb94.js";import"./es.number.to-fixed-51ce99be.js";function m(){return m=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var s=arguments[t];for(var a in s)Object.prototype.hasOwnProperty.call(s,a)&&(e[a]=s[a])}return e},m.apply(this,arguments)}n(m,"_extends");const y={},f="wrapper";function p({components:e,...t}){return o(f,m({},y,t,{components:e,mdxType:"MDXLayout"}),o(d,{title:"Tokens/Fonts Families",mdxType:"Meta"}),o("h1",null,"Line Heights"),o(l,{tokens:u,mdxType:"TokensGrid"}))}n(p,"MDXContent");p.isMDXComponent=!0;const g=n(()=>{throw new Error("Docs-only story")},"__page");g.parameters={docsOnly:!0};const r={title:"Tokens/Fonts Families",includeStories:["__page"]},x={};r.parameters=r.parameters||{};r.parameters.docs={...r.parameters.docs||{},page:()=>o(c,{mdxStoryNameToKey:x,mdxComponentAnnotations:r},o(p,null))};const j=["__page"];export{j as __namedExportsOrder,g as __page,r as default};
//# sourceMappingURL=fonts.stories-47f92372.js.map
